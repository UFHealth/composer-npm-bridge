var search_data = {
    'index': {
        'searchIndex': ["eloquent","eloquent\\composer","eloquent\\composer\\npmbridge","eloquent\\composer\\npmbridge\\exception","eloquent\\composer\\npmbridge\\exception\\npmcommandfailedexception","eloquent\\composer\\npmbridge\\exception\\npmnotfoundexception","eloquent\\composer\\npmbridge\\npmbridge","eloquent\\composer\\npmbridge\\npmbridgefactory","eloquent\\composer\\npmbridge\\npmbridgefactoryinterface","eloquent\\composer\\npmbridge\\npmbridgeinterface","eloquent\\composer\\npmbridge\\npmbridgeplugin","eloquent\\composer\\npmbridge\\npmclient","eloquent\\composer\\npmbridge\\npmclientinterface","eloquent\\composer\\npmbridge\\npmvendorfinder","eloquent\\composer\\npmbridge\\npmvendorfinderinterface","eloquent\\composer\\npmbridge\\exception\\npmcommandfailedexception::__construct","eloquent\\composer\\npmbridge\\exception\\npmcommandfailedexception::command","eloquent\\composer\\npmbridge\\exception\\npmnotfoundexception::__construct","eloquent\\composer\\npmbridge\\npmbridge::__construct","eloquent\\composer\\npmbridge\\npmbridge::io","eloquent\\composer\\npmbridge\\npmbridge::vendorfinder","eloquent\\composer\\npmbridge\\npmbridge::client","eloquent\\composer\\npmbridge\\npmbridge::install","eloquent\\composer\\npmbridge\\npmbridge::update","eloquent\\composer\\npmbridge\\npmbridge::isdependantpackage","eloquent\\composer\\npmbridge\\npmbridgefactory::create","eloquent\\composer\\npmbridge\\npmbridgefactoryinterface::create","eloquent\\composer\\npmbridge\\npmbridgeinterface::install","eloquent\\composer\\npmbridge\\npmbridgeinterface::update","eloquent\\composer\\npmbridge\\npmbridgeinterface::isdependantpackage","eloquent\\composer\\npmbridge\\npmbridgeplugin::__construct","eloquent\\composer\\npmbridge\\npmbridgeplugin::bridgefactory","eloquent\\composer\\npmbridge\\npmbridgeplugin::activate","eloquent\\composer\\npmbridge\\npmbridgeplugin::getsubscribedevents","eloquent\\composer\\npmbridge\\npmbridgeplugin::onpostinstallcmd","eloquent\\composer\\npmbridge\\npmbridgeplugin::onpostupdatecmd","eloquent\\composer\\npmbridge\\npmclient::__construct","eloquent\\composer\\npmbridge\\npmclient::processexecutor","eloquent\\composer\\npmbridge\\npmclient::executablefinder","eloquent\\composer\\npmbridge\\npmclient::install","eloquent\\composer\\npmbridge\\npmclient::update","eloquent\\composer\\npmbridge\\npmclient::shrinkwrap","eloquent\\composer\\npmbridge\\npmclientinterface::install","eloquent\\composer\\npmbridge\\npmclientinterface::update","eloquent\\composer\\npmbridge\\npmclientinterface::shrinkwrap","eloquent\\composer\\npmbridge\\npmvendorfinder::find","eloquent\\composer\\npmbridge\\npmvendorfinderinterface::find"],
        'info': [["Eloquent","","Eloquent.html","","",3],["Eloquent\\Composer","","Eloquent\/Composer.html","","",3],["Eloquent\\Composer\\NpmBridge","","Eloquent\/Composer\/NpmBridge.html","","",3],["Eloquent\\Composer\\NpmBridge\\Exception","","Eloquent\/Composer\/NpmBridge\/Exception.html","","",3],["NpmCommandFailedException","Eloquent\\Composer\\NpmBridge\\Exception","Eloquent\/Composer\/NpmBridge\/Exception\/NpmCommandFailedException.html"," < Exception","The NPM command failed.",1],["NpmNotFoundException","Eloquent\\Composer\\NpmBridge\\Exception","Eloquent\/Composer\/NpmBridge\/Exception\/NpmNotFoundException.html"," < Exception","The npm executable could not be found.",1],["NpmBridge","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html","","Manages NPM installs, updates, and shrinkwrapping for",1],["NpmBridgeFactory","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridgeFactory.html","","Creates NPM bridges.",1],["NpmBridgeFactoryInterface","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridgeFactoryInterface.html","","The interface implemented by NPM bridge factories.",1],["NpmBridgeInterface","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html","","The interface implemented by NPM bridges.",1],["NpmBridgePlugin","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html","","A Composer plugin to facilitate NPM integration.",1],["NpmClient","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmClient.html","","A simple client for performing NPM operations.",1],["NpmClientInterface","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html","","The interface implemented by NPM clients.",1],["NpmVendorFinder","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmVendorFinder.html","","Finds NPM bridge enabled vendor packages.",1],["NpmVendorFinderInterface","Eloquent\\Composer\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmVendorFinderInterface.html","","The interface implemented by NPM vendor finders.",1],["NpmCommandFailedException::__construct","Eloquent\\Composer\\NpmBridge\\Exception\\NpmCommandFailedException","Eloquent\/Composer\/NpmBridge\/Exception\/NpmCommandFailedException.html#method___construct","(string $command, <a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new NPM command failed exception.",2],["NpmCommandFailedException::command","Eloquent\\Composer\\NpmBridge\\Exception\\NpmCommandFailedException","Eloquent\/Composer\/NpmBridge\/Exception\/NpmCommandFailedException.html#method_command","()","Get the executed command.",2],["NpmNotFoundException::__construct","Eloquent\\Composer\\NpmBridge\\Exception\\NpmNotFoundException","Eloquent\/Composer\/NpmBridge\/Exception\/NpmNotFoundException.html#method___construct","(<a href=\"http:\/\/php.net\/Exception\"><abbr title=\"Exception\">Exception<\/abbr><\/a> $cause = null)","Construct a new npm not found exception.",2],["NpmBridge::__construct","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method___construct","(<abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmVendorFinderInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmVendorFinderInterface\">NpmVendorFinderInterface<\/abbr><\/a> $vendorFinder = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmClientInterface\">NpmClientInterface<\/abbr><\/a> $client = null)","Construct a new Composer NPM bridge plugin.",2],["NpmBridge::io","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_io","()","Get the i\/o interface.",2],["NpmBridge::vendorFinder","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_vendorFinder","()","Get the vendor finder.",2],["NpmBridge::client","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_client","()","Get the NPM client.",2],["NpmBridge::install","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_install","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, boolean|null $isDevMode = null)","Install NPM dependencies for a Composer project and",2],["NpmBridge::update","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_update","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer)","Update NPM dependencies for a Composer project and",2],["NpmBridge::isDependantPackage","Eloquent\\Composer\\NpmBridge\\NpmBridge","Eloquent\/Composer\/NpmBridge\/NpmBridge.html#method_isDependantPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, boolean|null $includeDevDependencies = null)","Returns true if the supplied package requires the Composer",2],["NpmBridgeFactory::create","Eloquent\\Composer\\NpmBridge\\NpmBridgeFactory","Eloquent\/Composer\/NpmBridge\/NpmBridgeFactory.html#method_create","(<abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmVendorFinderInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmVendorFinderInterface\">NpmVendorFinderInterface<\/abbr><\/a> $vendorFinder = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmClientInterface\">NpmClientInterface<\/abbr><\/a> $client = null)","Construct a new Composer NPM bridge plugin.",2],["NpmBridgeFactoryInterface::create","Eloquent\\Composer\\NpmBridge\\NpmBridgeFactoryInterface","Eloquent\/Composer\/NpmBridge\/NpmBridgeFactoryInterface.html#method_create","(<abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmVendorFinderInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmVendorFinderInterface\">NpmVendorFinderInterface<\/abbr><\/a> $vendorFinder = null, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmClientInterface\">NpmClientInterface<\/abbr><\/a> $client = null)","Construct a new Composer NPM bridge plugin.",2],["NpmBridgeInterface::install","Eloquent\\Composer\\NpmBridge\\NpmBridgeInterface","Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html#method_install","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, boolean|null $isDevMode = null)","Install NPM dependencies for a Composer project and",2],["NpmBridgeInterface::update","Eloquent\\Composer\\NpmBridge\\NpmBridgeInterface","Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html#method_update","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer)","Update NPM dependencies for a Composer project and",2],["NpmBridgeInterface::isDependantPackage","Eloquent\\Composer\\NpmBridge\\NpmBridgeInterface","Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html#method_isDependantPackage","(<abbr title=\"Composer\\Package\\PackageInterface\">PackageInterface<\/abbr> $package, boolean|null $includeDevDependencies = null)","Returns true if the supplied package requires the Composer",2],["NpmBridgePlugin::__construct","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method___construct","(<a href=\"Eloquent\/Composer\/NpmBridge\/NpmBridgeFactoryInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmBridgeFactoryInterface\">NpmBridgeFactoryInterface<\/abbr><\/a> $bridgeFactory = null)","Construct a new Composer NPM bridge plugin.",2],["NpmBridgePlugin::bridgeFactory","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method_bridgeFactory","()","Get the bridge factory.",2],["NpmBridgePlugin::activate","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method_activate","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, <abbr title=\"Composer\\IO\\IOInterface\">IOInterface<\/abbr> $io)","Activate the plugin.",2],["NpmBridgePlugin::getSubscribedEvents","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method_getSubscribedEvents","()","Get the event subscriber configuration for this plugin.",2],["NpmBridgePlugin::onPostInstallCmd","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method_onPostInstallCmd","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event)","Handle post install command events.",2],["NpmBridgePlugin::onPostUpdateCmd","Eloquent\\Composer\\NpmBridge\\NpmBridgePlugin","Eloquent\/Composer\/NpmBridge\/NpmBridgePlugin.html#method_onPostUpdateCmd","(<abbr title=\"Composer\\Script\\Event\">Event<\/abbr> $event)","Handle post update command events.",2],["NpmClient::__construct","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method___construct","(<abbr title=\"Composer\\Util\\ProcessExecutor\">ProcessExecutor<\/abbr> $processExecutor = null, <abbr title=\"Symfony\\Component\\Process\\ExecutableFinder\">ExecutableFinder<\/abbr> $executableFinder = null, <abbr title=\"Icecave\\Isolator\\Isolator\">Isolator<\/abbr> $isolator = null)","Construct a new NPM client.",2],["NpmClient::processExecutor","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method_processExecutor","()","Get the process executor.",2],["NpmClient::executableFinder","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method_executableFinder","()","Get the executable finder.",2],["NpmClient::install","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method_install","(string|null $path = null, boolean|null $isDevMode = null)","Install NPM dependencies for the project at the supplied",2],["NpmClient::update","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method_update","(string|null $path = null)","Update NPM dependencies for the project at the supplied",2],["NpmClient::shrinkwrap","Eloquent\\Composer\\NpmBridge\\NpmClient","Eloquent\/Composer\/NpmBridge\/NpmClient.html#method_shrinkwrap","(string|null $path = null)","Shrink-wrap NPM dependencies for the project at the",2],["NpmClientInterface::install","Eloquent\\Composer\\NpmBridge\\NpmClientInterface","Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html#method_install","(string|null $path = null, boolean|null $isDevMode = null)","Install NPM dependencies for the project at the supplied",2],["NpmClientInterface::update","Eloquent\\Composer\\NpmBridge\\NpmClientInterface","Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html#method_update","(string|null $path = null)","Update NPM dependencies for the project at the supplied",2],["NpmClientInterface::shrinkwrap","Eloquent\\Composer\\NpmBridge\\NpmClientInterface","Eloquent\/Composer\/NpmBridge\/NpmClientInterface.html#method_shrinkwrap","(string|null $path = null)","Shrink-wrap NPM dependencies for the project at the",2],["NpmVendorFinder::find","Eloquent\\Composer\\NpmBridge\\NpmVendorFinder","Eloquent\/Composer\/NpmBridge\/NpmVendorFinder.html#method_find","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmBridgeInterface\">NpmBridgeInterface<\/abbr><\/a> $bridge)","Find all NPM bridge enabled vendor packages.",2],["NpmVendorFinderInterface::find","Eloquent\\Composer\\NpmBridge\\NpmVendorFinderInterface","Eloquent\/Composer\/NpmBridge\/NpmVendorFinderInterface.html#method_find","(<abbr title=\"Composer\\Composer\">Composer<\/abbr> $composer, <a href=\"Eloquent\/Composer\/NpmBridge\/NpmBridgeInterface.html\"><abbr title=\"Eloquent\\Composer\\NpmBridge\\NpmBridgeInterface\">NpmBridgeInterface<\/abbr><\/a> $bridge)","Find all NPM bridge enabled vendor packages.",2]]
    }
}
search_data['index']['longSearchIndex'] = search_data['index']['searchIndex']